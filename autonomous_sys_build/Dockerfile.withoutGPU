# noVNC + TurboVNC 
# Useful links for the software we are using:
# http://novnc.com
# https://turbovnc.org

FROM ubuntu:16.04

ARG SOURCEFORGE=https://sourceforge.net/projects
ARG TURBOVNC_VERSION=2.1.2
ARG VIRTUALGL_VERSION=2.5.2
ARG LIBJPEG_VERSION=1.5.2
ARG WEBSOCKIFY_VERSION=0.8.0
ARG NOVNC_VERSION=1.0.0

RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        ca-certificates \
        curl wget emacs vim less sudo lsof net-tools git htop gedit gedit-plugins \
	unzip zip psmisc xz-utils \
	libglib2.0-0 libxext6 libsm6 libxrender1 \
	libpython-dev libsuitesparse-dev libeigen3-dev libsdl1.2-dev doxygen graphviz libignition-math2-dev \
        gcc \
        libc6-dev \
	lubuntu-desktop xvfb xterm terminator zenity mesa-utils \
        make cmake \
        python \
        python-numpy \
        x11-xkb-utils \
        xauth \
        xfonts-base \
        xkb-data && \
    rm -rf /var/lib/apt/lists/*

RUN cd /tmp && \
    curl -fsSL -O ${SOURCEFORGE}/turbovnc/files/${TURBOVNC_VERSION}/turbovnc_${TURBOVNC_VERSION}_amd64.deb \
        -O ${SOURCEFORGE}/libjpeg-turbo/files/${LIBJPEG_VERSION}/libjpeg-turbo-official_${LIBJPEG_VERSION}_amd64.deb \
        -O ${SOURCEFORGE}/virtualgl/files/${VIRTUALGL_VERSION}/virtualgl_${VIRTUALGL_VERSION}_amd64.deb \
        -O ${SOURCEFORGE}/virtualgl/files/${VIRTUALGL_VERSION}/virtualgl32_${VIRTUALGL_VERSION}_amd64.deb && \
    dpkg -i *.deb && \
    rm -f /tmp/*.deb && \
    sed -i 's/$host:/unix:/g' /opt/TurboVNC/bin/vncserver

# Install miniconda
RUN cd /tmp && \
    curl -fsSL -O https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh && \
    chmod u+x Miniconda3-latest-Linux-x86_64.sh && \
    ./Miniconda3-latest-Linux-x86_64.sh -b

ENV PATH ${PATH}:/opt/TurboVNC/bin

RUN curl -fsSL https://github.com/novnc/noVNC/archive/v${NOVNC_VERSION}.tar.gz | tar -xzf - -C /opt && \
    curl -fsSL https://github.com/novnc/websockify/archive/v${WEBSOCKIFY_VERSION}.tar.gz | tar -xzf - -C /opt && \
    mv /opt/noVNC-${NOVNC_VERSION} /opt/noVNC && \
    chmod -R a+w /opt/noVNC && \
    mv /opt/websockify-${WEBSOCKIFY_VERSION} /opt/websockify && \
    cd /opt/websockify && make && \
    cd /opt/noVNC/utils && \
    ln -s /opt/websockify

COPY xorg.conf /etc/X11/xorg.conf
COPY index.html /opt/noVNC/index.html

# Defeat screen locking and power management
#RUN gsettings set org.gnome.desktop.lockdown disable-lock-screen true
RUN mv /etc/xdg/autostart/light-locker.desktop /etc/xdg/autostart/light-locker.desktop_bak
RUN mv /etc/xdg/autostart/xfce4-power-manager.desktop /etc/xdg/autostart/xfce4-power-manager.desktop_bak

# Expose whatever port NoVNC will serve from. In our case it will be 40001, see ./start_desktop.sh
EXPOSE 40001
ENV DISPLAY :1

# Install desktop file for this user
RUN mkdir -p /root/Desktop
COPY ./terminator.desktop /root/Desktop
RUN mkdir -p /root/.config/terminator
COPY ./terminator_config /root/.config/terminator/config
COPY ./chrome.desktop /root/Desktop
COPY ./galculator.desktop /root/Desktop
COPY ./htop.desktop /root/Desktop
COPY ./self.pem /root/self.pem

RUN perl -pi -e 's/^Exec=terminator$/Exec=terminator -e "bash"/g' /usr/share/applications/terminator.desktop

COPY ./background.png /usr/share/lubuntu/wallpapers/1604-lubuntu-default-wallpaper.png

RUN mkdir -p /root/.vnc
COPY ./xstartup.turbovnc /root/.vnc/xstartup.turbovnc
RUN chmod a+x /root/.vnc/xstartup.turbovnc

ENV DEBIAN_FRONTEND noninteractive
RUN apt-get update && apt-get install -y --no-install-recommends apt-utils locales

# Fix LANG issues
RUN echo "en_US.UTF-8 UTF-8" > /etc/locale.gen
RUN locale-gen
RUN echo "export LC_ALL=en_US.UTF-8" >> /root/.bashrc
RUN echo "export LANG=en_US.UTF-8" >> /root/.bashrc
RUN echo "export LANGUAGE=en_US.UTF-8" >> /root/.bashrc


# Add miniconda to root's PATH
RUN echo "export PATH=/root/miniconda3:$PATH" >> /root/.bashrc

# Create some useful default aliases
RUN printf "%s\n" \
           "alias cp=\"cp -i\"" \
           "alias mv=\"mv -i\"" \
           "alias rm=\"rm -i\"" >> /root/.bash_aliases

RUN apt-get install apt-transport-https ca-certificates -y

# Sublime Text Editor
RUN wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add - && \
	echo "deb https://download.sublimetext.com/ apt/stable/" | sudo tee /etc/apt/sources.list.d/sublime-text.list && \
        apt-get update && \
	apt-get install sublime-text -y

# Install chrome
RUN wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb && \
    apt install -y ./google-chrome-stable_current_amd64.deb --no-install-recommends && \
    rm -f ./google-chrome-stable_current_amd64.deb

COPY start_desktop.sh /usr/local/bin/start_desktop.sh

RUN mkdir -p /home/user/.icons
RUN wget -O /home/user/.icons/sublime.png https://upload.wikimedia.org/wikipedia/en/d/d2/Sublime_Text_3_logo.png
RUN wget -O /root/Desktop/sublime.desktop https://download.openuas.us/sublime.desktop
RUN wget -O /root/Desktop/pycharm.desktop https://download.openuas.us/pycharm.desktop
RUN perl -pi -e 's/^Exec=vglrun subl$/Exec=subl/g' /root/Desktop/sublime.desktop

# Install pycharm
WORKDIR /opt/pycharm
RUN wget https://download.jetbrains.com/python/pycharm-community-2020.1.1.tar.gz
RUN sudo tar xzf pycharm-community-2020.1.1.tar.gz
RUN rm -f pycharm-community-2020.1.1.tar.gz

RUN wget  https://download.openuas.us/openuavbanner.jpg -O /usr/share/lubuntu/wallpapers/1604-lubuntu-default-wallpaper.png 

WORKDIR /root/

ENV PYTHONPATH :/usr/local/lib/python3.6/dist-packages:/usr/local/lib/python2.7/dist-packages
RUN echo "export PYTHONPATH=:/usr/local/lib/python3.6/dist-packages:/usr/local/lib/python2.7/dist-packages" >> /root/.bashrc

# adding alias to jupyter notebook to allow run as root   
RUN echo "alias jupyter-notebook=\"jupyter notebook --ip=0.0.0.0 --port=8888 --allow-root\"" >> /root/.bashrc
RUN rm /usr/bin/x-www-browser
RUN echo "exit" >> /usr/bin/x-www-browser

# Install python3.6
RUN apt install software-properties-common -y
RUN add-apt-repository ppa:deadsnakes/ppa -y
RUN apt update -y
# Install python3.6-tk for matplotlib
RUN apt install python3.6 python3.6-tk -y
RUN curl https://bootstrap.pypa.io/get-pip.py | sudo python3.6
RUN pip3 install jupyter numpy matplotlib 

CMD /usr/local/bin/start_desktop.sh
